aux(live-3, Could-1)
nsubj(live-3, humans-2)
root(ROOT-0, live-3)
case(Mars-5, on-4)
nmod:on(live-3, Mars-5)
det(day-7, some-6)
dep(Mars-5, day-7)

nsubj(ask-2, Scientists-1)
root(ROOT-0, ask-2)
det(question-4, this-3)
dobj(ask-2, question-4)
mark(similar-10, because-5)
nsubj(similar-10, Earth-6)
cc(Earth-6, and-7)
conj:and(Earth-6, Mars-8)
nsubj(similar-10, Mars-8)
cop(similar-10, are-9)
advcl(ask-2, similar-10)

nsubj(long-14, Similar-1)
case(day-5, to-2)
compound(day-5, Earth-3)
nmod:to(Similar-1, day-5)
compound(day-9, Mars-8)
nsubj(long-14, day-9)
cop(long-14, is-10)
advmod(24-12, about-11)
nummod(hours-13, 24-12)
nmod:npmod(long-14, hours-13)
root(ROOT-0, long-14)

advmod(Sun-10, Also-2)
det(planets-6, both-5)
nsubj(Sun-10, planets-6)
cop(Sun-10, are-7)
case(Sun-10, near-8)
det(Sun-10, the-9)
root(ROOT-0, Sun-10)
case(system-14, in-11)
nmod:poss(system-14, our-12)
amod(system-14, solar-13)
nmod:in(Sun-10, system-14)

nsubj(planet-5, Earth-1)
nsubj(Mars-7, Earth-1)
cop(planet-5, is-2)
det(planet-5, the-3)
amod(planet-5, 3rd-4)
root(ROOT-0, planet-5)
cc(planet-5, and-6)
conj:and(planet-5, Mars-7)
det(planet-10, the-8)
amod(planet-10, 4th-9)
dobj(Mars-7, planet-10)
case(Sun-13, from-11)
det(Sun-13, the-12)
nmod:from(Mars-7, Sun-13)

nsubj(has-3, Mars-1)
advmod(has-3, also-2)
root(ROOT-0, has-3)
det(tilt-6, an-4)
amod(tilt-6, axial-5)
dobj(has-3, tilt-6)
amod(tilt-6, similar-7)
case(tilt-11, to-8)
compound(tilt-11, Earth-9)
amod(tilt-11, axial-10)
nmod:to(similar-7, tilt-11)

det(tilt-3, An-1)
amod(tilt-3, axial-2)
nsubj(gives-4, tilt-3)
root(ROOT-0, gives-4)
det(planets-6, both-5)
iobj(gives-4, planets-6)
dobj(gives-4, seasons-7)
case(changes-10, with-8)
compound(changes-10, temperature-9)
nmod:with(seasons-7, changes-10)

advmod(Earth-4, Just-1)
case(Earth-4, like-2)
advcl(has-8, Earth-4)
nsubj(has-8, Mars-7)
root(ROOT-0, has-8)
amod(winters-10, cold-9)
dobj(has-8, winters-10)
cc(winters-10, and-11)
amod(summers-13, warmer-12)
dobj(has-8, summers-13)
conj:and(winters-10, summers-13)

case(Earth-3, Like-1)
nmod:like(has-7, Earth-3)
nsubj(has-7, Mars-6)
root(ROOT-0, has-7)
dobj(has-7, winds-9)
dep(winds-9, weather-13)
acl(weather-13, dust-16)
dobj(dust-16, storms-18)
cc(storms-18, and-21)
dobj(dust-16, volcanoes-22)
conj:and(storms-18, volcanoes-22)

cc(different-12, But-1)
case(some-3, in-2)
nmod:in(different-12, some-3)
dep(some-3, ways-5)
nsubj(different-12, Earth-8)
cc(Earth-8, and-9)
conj:and(Earth-8, Mars-10)
nsubj(different-12, Mars-10)
cop(different-12, are-11)
root(ROOT-0, different-12)

nsubj(include-2, Differences-1)
nsubj(gravity-15, Differences-1)
root(ROOT-0, include-2)
dobj(include-2, temperature-4)
dep(temperature-4, length-7)
case(year-11, of-8)
det(year-11, a-9)
nmod:of(length-7, year-11)
cc(include-2, and-14)
conj:and(include-2, gravity-15)

det(temperature-3, The-1)
amod(temperature-3, average-2)
nsubj(F-7, temperature-3)
cop(F-7, is-4)
nummod(F-7, -81-5)
compound(F-7, deg-6)
root(ROOT-0, F-7)
case(Mars-10, on-8)
nmod:on(F-7, Mars-10)
cc(F-7, but-13)
nummod(F-16, 57-14)
compound(F-16, deg-15)
conj:but(F-7, F-16)
case(Earth-18, on-17)
nmod:on(F-16, Earth-18)

det(year-3, A-1)
compound(year-3, Martian-2)
nsubj(long-8, year-3)
cop(long-8, is-4)
advmod(long-8, almost-5)
advmod(long-8, twice-6)
advmod(long-8, as-7)
root(ROOT-0, long-8)
case(year-12, as-9)
det(year-12, an-10)
compound(year-12, Earth-11)
nmod:as(long-8, year-12)

compound(gravity-2, Earth-1)
nsubj(stronger-7, gravity-2)
cop(stronger-7, is-3)
advmod(3-5, almost-4)
nummod(times-6, 3-5)
nmod:npmod(stronger-7, times-6)
root(ROOT-0, stronger-7)
case(gravity-10, than-8)
compound(gravity-10, Martian-9)
nmod:than(stronger-7, gravity-10)

case(similarities-4, Given-1)
det(similarities-4, the-2)
nmod:given(go-9, similarities-4)
aux(go-9, can-7)
advmod(go-9, humans-8)
root(ROOT-0, go-9)
case(Mars-11, to-10)
nmod:to(go-9, Mars-11)
cc(go-9, and-12)
conj:and(go-9, live-13)
expl(go-9, there-14)

compound(scientists-2, NASA-1)
nsubj(want-3, scientists-2)
nsubj:xsubj(answer-5, scientists-2)
root(ROOT-0, want-3)
mark(answer-5, to-4)
xcomp(want-3, answer-5)
det(question-7, this-6)
dobj(answer-5, question-7)

nsubj(oversees-2, NASA-1)
root(ROOT-0, oversees-2)
compound(research-4, U.S.-3)
dobj(oversees-2, research-4)
case(exploration-7, on-5)
compound(exploration-7, space-6)
nmod:on(oversees-2, exploration-7)

compound(scientists-2, NASA-1)
nsubj(send-3, scientists-2)
root(ROOT-0, send-3)
nsubj(called-5, devices-4)
ccomp(send-3, called-5)
dobj(called-5, spacecraft-6)
mark(explore-8, to-7)
advcl(called-5, explore-8)
dobj(explore-8, Mars-9)

det(spacecraft-2, The-1)
nsubj(carry-3, spacecraft-2)
root(ROOT-0, carry-3)
dobj(carry-3, rovers-4)
nsubj(rove-7, rovers-4)
nsubj(move-9, rovers-4)
ref(rovers-4, that-5)
aux(rove-7, can-6)
acl:relcl(rovers-4, rove-7)
cc(rove-7, or-8)
acl:relcl(rovers-4, move-9)
conj:or(rove-7, move-9)
advmod(rove-7, around-10)

det(rovers-3, These-1)
amod(rovers-3, wheeled-2)
nsubj(explore-5, rovers-3)
aux(explore-5, can-4)
root(ROOT-0, explore-5)
dobj(explore-5, characteristics-6)
case(planet-9, of-7)
det(planet-9, the-8)
nmod:of(characteristics-6, planet-9)

nsubj(show-4, They-1)
nsubj(weather-8, They-1)
aux(show-4, can-2)
advmod(show-4, also-3)
root(ROOT-0, show-4)
compound(characteristics-6, land-5)
dobj(show-4, characteristics-6)
cc(show-4, and-7)
conj:and(show-4, weather-8)
case(Mars-10, on-9)
nmod:on(weather-8, Mars-10)

nsubjpass(named-7, One-1)
case(rovers-5, of-2)
det(rovers-5, these-3)
compound(rovers-5, NASA-4)
nmod:of(One-1, rovers-5)
auxpass(named-7, is-6)
root(ROOT-0, named-7)
advmod(named-7, Curiosity-8)

nsubj(found-2, Curiosity-1)
root(ROOT-0, found-2)
dobj(found-2, evidence-3)
mark(contains-8, that-4)
nsubj(contains-8, soil-5)
case(Mars-7, on-6)
nmod:on(soil-5, Mars-7)
ccomp(found-2, contains-8)
compound(%-10, 2-9)
amod(water-11, %-10)
dobj(contains-8, water-11)

nsubj(planned-3, NASA-1)
aux(planned-3, has-2)
root(ROOT-0, planned-3)
det(mission-6, a-4)
amod(mission-6, new-5)
dobj(planned-3, mission-6)
acl(mission-6, called-7)
dobj(called-7, Mars-8)
nummod(Mars-8, 2020-9)

det(mission-2, This-1)
nsubj(use-4, mission-2)
aux(use-4, will-3)
root(ROOT-0, use-4)
det(rover-8, a-5)
amod(rover-8, new-6)
amod(rover-8, car-sized-7)
dobj(use-4, rover-8)
mark(examine-10, to-9)
advcl(use-4, examine-10)
dobj(examine-10, Mars-11)

det(rover-3, The-1)
amod(rover-3, new-2)
nsubj(contain-5, rover-3)
aux(contain-5, will-4)
root(ROOT-0, contain-5)
amod(instruments-7, additional-6)
dobj(contain-5, instruments-7)
mark(study-9, to-8)
advcl(contain-5, study-9)
dobj(study-9, Mars-10)

case(example-3, For-1)
nmod:for(take-9, example-3)
nummod(instrument-7, one-6)
nsubj(take-9, instrument-7)
aux(take-9, will-8)
root(ROOT-0, take-9)
dobj(take-9, images-10)
case(surface-13, beneath-11)
compound(surface-13, Mars-12)
nmod:beneath(take-9, surface-13)

det(instrument-2, Another-1)
nsubj(attempt-4, instrument-2)
nsubj:xsubj(make-6, instrument-2)
aux(attempt-4, will-3)
root(ROOT-0, attempt-4)
mark(make-6, to-5)
xcomp(attempt-4, make-6)
dobj(make-6, oxygen-7)
case(dioxide-10, from-8)
compound(dioxide-10, carbon-9)
nmod:from(make-6, dioxide-10)

compound(2020-2, Mars-1)
nsubj(help-4, 2020-2)
aux(help-4, will-3)
root(ROOT-0, help-4)
nsubj(answer-6, scientists-5)
ccomp(help-4, answer-6)
amod(questions-8, important-7)
dobj(answer-6, questions-8)

nsubj(explore-3, It-1)
aux(explore-3, will-2)
root(ROOT-0, explore-3)
mark(life-8, whether-4)
expl(life-8, there-5)
aux(life-8, has-6)
cop(life-8, been-7)
ccomp(explore-3, life-8)
case(Mars-10, on-9)
nmod:on(life-8, Mars-10)

nsubj(answer-4, It-1)
aux(answer-4, will-2)
advmod(answer-4, also-3)
root(ROOT-0, answer-4)
mark(live-8, whether-5)
nsubj(live-8, humans-6)
aux(live-8, can-7)
ccomp(answer-4, live-8)
case(Mars-10, on-9)
nmod:on(live-8, Mars-10)
case(future-13, in-11)
det(future-13, the-12)
nmod:in(live-8, future-13)

advmod(help-4, How-1)
aux(help-4, can-2)
nsubj(help-4, engineers-3)
root(ROOT-0, help-4)
xcomp(help-4, prevent-5)
dobj(prevent-5, spills-6)
case(oil-8, of-7)
nmod:of(spills-6, oil-8)
case(supertankers-10, from-9)
nmod:from(prevent-5, supertankers-10)

nsubj(ships-4, Supertankers-1)
cop(ships-4, are-2)
amod(ships-4, huge-3)
root(ROOT-0, ships-4)
nsubj(carry-6, ships-4)
ref(ships-4, that-5)
acl:relcl(ships-4, carry-6)
dobj(carry-6, oil-7)
case(oceans-10, over-8)
det(oceans-10, the-9)
nmod:over(oil-7, oceans-10)

det(supertanker-2, A-1)
nsubj(contain-4, supertanker-2)
aux(contain-4, can-3)
root(ROOT-0, contain-4)
case(tons-8, about-5)
det(tons-8, a-6)
amod(tons-8, half-million-7)
nmod:about(contain-4, tons-8)
case(oil-10, of-9)
nmod:of(tons-8, oil-10)

det(supertanker-2, A-1)
nsubj(size-5, supertanker-2)
cop(size-5, is-3)
det(size-5, the-4)
root(ROOT-0, size-5)
case(fields-10, of-6)
advmod(five-8, about-7)
nummod(fields-10, five-8)
compound(fields-10, football-9)
nmod:of(size-5, fields-10)

det(area-4, A-1)
compound(area-4, supertanker-2)
compound(area-4, cargo-3)
nsubj(hold-6, area-4)
aux(hold-6, could-5)
root(ROOT-0, hold-6)
det(Building-10, the-7)
compound(Building-10, Empire-8)
compound(Building-10, State-9)
dobj(hold-6, Building-10)

nsubjpass(transported-7, Most-1)
case(oil-5, of-2)
det(oil-5, the-3)
compound(oil-5, world-4)
nmod:of(Most-1, oil-5)
auxpass(transported-7, is-6)
root(ROOT-0, transported-7)
case(supertankers-10, by-8)
det(supertankers-10, these-9)
nmod:by(transported-7, supertankers-10)

nsubj(occur-2, Disasters-1)
root(ROOT-0, occur-2)
advmod(wrecked-4, when-3)
advcl(occur-2, wrecked-4)
amod(oil-7, supertankers-5)
compound(oil-7, spill-6)
dobj(wrecked-4, oil-7)
case(ocean-10, into-8)
det(ocean-10, the-9)
nmod:into(wrecked-4, ocean-10)

mark(spills-8, As-1)
det(result-3, a-2)
nsubj(spills-8, result-3)
case(oil-6, of-4)
det(oil-6, these-5)
nmod:of(result-3, oil-6)
advcl(damaged-14, spills-8)
det(environment-12, the-11)
nsubjpass(damaged-14, environment-12)
auxpass(damaged-14, is-13)
root(ROOT-0, damaged-14)

case(1967-3, In-1)
nmod:in(crashed-8, 1967-3)
det(supertanker-7, a-6)
nsubj(crashed-8, supertanker-7)
root(ROOT-0, crashed-8)
case(shores-11, near-9)
det(shores-11, the-10)
nmod:near(crashed-8, shores-11)
case(England-13, of-12)
nmod:of(shores-11, England-13)

det(crash-2, This-1)
nsubj(resulted-3, crash-2)
root(ROOT-0, resulted-3)
mark(washing-5, in-4)
advcl(resulted-3, washing-5)
advmod(washing-5, ashore-6)
amod(seabirds-11, 200,000-8)
amod(seabirds-11, dead-10)
dobj(washing-5, seabirds-11)

case(1989-3, In-1)
nmod:in(spilled-8, 1989-3)
det(supertanker-7, another-6)
nsubj(spilled-8, supertanker-7)
root(ROOT-0, spilled-8)
dobj(spilled-8, oil-9)
case(coast-12, into-10)
compound(coast-12, Alaska-11)
nmod:into(spilled-8, coast-12)

det(gallons-5, The-1)
amod(gallons-5, spilled-2)
compound(million-4, 11-3)
nummod(gallons-5, million-4)
nsubj(otters-12, gallons-5)
nsubj:xsubj(die-14, gallons-5)
case(oil-7, of-6)
nmod:of(gallons-5, oil-7)
acl(oil-7, caused-8)
dobj(caused-8, 1,000-10)
root(ROOT-0, otters-12)
mark(die-14, to-13)
xcomp(otters-12, die-14)

compound(spills-2, Oil-1)
nsubj(kill-6, spills-2)
case(supertankers-4, from-3)
nmod:from(spills-2, supertankers-4)
advmod(kill-6, also-5)
root(ROOT-0, kill-6)
xcomp(kill-6, drifting-7)
amod(plants-9, microscopic-8)
dobj(drifting-7, plants-9)

det(plants-2, These-1)
nsubj(provide-3, plants-2)
root(ROOT-0, provide-3)
dobj(provide-3, food-4)
case(life-8, for-5)
compound(life-8, sea-6)
nmod:for(food-4, life-8)
case(whales-13, such-11)
mwe(such-11, as-12)
nmod:such_as(food-4, whales-13)
cc(whales-13, and-14)
nmod:such_as(food-4, shrimp-15)
conj:and(whales-13, shrimp-15)

det(plants-2, The-1)
nsubj(produce-4, plants-2)
advmod(produce-4, also-3)
root(ROOT-0, produce-4)
nummod(percent-6, 70-5)
dobj(produce-4, percent-6)
case(supply-11, of-7)
det(supply-11, the-8)
compound(supply-11, world-9)
compound(supply-11, oxygen-10)
nmod:of(percent-6, supply-11)

nsubj(spills-2, Oil-1)
root(ROOT-0, spills-2)
dobj(spills-2, result-3)
advmod(limitations-6, partly-4)
case(limitations-6, from-5)
nmod:from(spills-2, limitations-6)
case(engineering-8, in-7)
nmod:in(limitations-6, engineering-8)

nsubj(lack-2, Supertankers-1)
root(ROOT-0, lack-2)
amod(hulls-5, double-3)
amod(hulls-5, bottom-4)
dobj(lack-2, hulls-5)
case(protection-8, for-6)
amod(protection-8, extra-7)
nmod:for(hulls-5, protection-8)

nsubj(lack-2, Supertankers-1)
root(ROOT-0, lack-2)
amod(power-4, extra-3)
dobj(lack-2, power-4)
cc(power-4, and-5)
compound(equipment-7, steering-6)
dobj(lack-2, equipment-7)
conj:and(power-4, equipment-7)
case(safety-9, for-8)
nmod:for(power-4, safety-9)

nsubj(have-3, Supertankers-1)
nsubj:xsubj(provide-8, Supertankers-1)
advmod(have-3, also-2)
root(ROOT-0, have-3)
advmod(have-3, only-4)
nummod(boiler-6, one-5)
nmod:npmod(only-4, boiler-6)
mark(provide-8, to-7)
xcomp(have-3, provide-8)
det(power-11, the-9)
compound(power-11, ship-10)
dobj(provide-8, power-11)

nsubj(have-2, Supertankers-1)
nsubj:xsubj(steer-7, Supertankers-1)
root(ROOT-0, have-2)
advmod(have-2, only-3)
nummod(propeller-5, one-4)
nmod:npmod(only-3, propeller-5)
mark(steer-7, to-6)
xcomp(have-2, steer-7)
det(ship-10, the-8)
amod(ship-10, huge-9)
dobj(steer-7, ship-10)

nsubj(causes-6, Lack-1)
case(components-5, of-2)
amod(components-5, such-3)
amod(components-5, backup-4)
nmod:of(Lack-1, components-5)
root(ROOT-0, causes-6)
dobj(causes-6, problems-7)
case(emergencies-9, during-8)
nmod:during(causes-6, emergencies-9)

nsubj(storms-6, Emergencies-1)
case(supertankers-3, for-2)
nmod:for(Emergencies-1, supertankers-3)
cop(storms-6, are-4)
compound(storms-6, ocean-5)
root(ROOT-0, storms-6)
cc(storms-6, and-7)
amod(reefs-9, coastal-8)
conj:and(storms-6, reefs-9)

nsubj(include-6, Solutions-1)
case(problems-3, to-2)
nmod:to(Solutions-1, problems-3)
case(supertankers-5, with-4)
nmod:with(problems-3, supertankers-5)
root(ROOT-0, include-6)
nummod(tactics-8, three-7)
dobj(include-6, tactics-8)

nsubjpass(built-4, Supertankers-1)
nsubj(propellers-16, Supertankers-1)
aux(built-4, must-2)
auxpass(built-4, be-3)
root(ROOT-0, built-4)
case(hulls-8, with-5)
amod(hulls-8, added-6)
nmod:with(built-4, hulls-8)
dep(hulls-8, boilers-12)
cc(built-4, and-15)
conj:and(built-4, propellers-16)

nsubj(provide-2, These-1)
root(ROOT-0, provide-2)
xcomp(provide-2, extra-3)
nsubj(control-9, safety-5)
ccomp(extra-3, control-9)
cc(control-9, and-12)
ccomp(extra-3, backup-13)
conj:and(control-9, backup-13)
case(emergencies-15, in-14)
dep(backup-13, emergencies-15)

advmod(need-6, Also-2)
nsubj(need-6, officers-5)
root(ROOT-0, need-6)
amod(training-8, top-7)
dobj(need-6, training-8)
mark(run-10, to-9)
advcl(need-6, run-10)
cc(run-10, and-11)
advcl(need-6, maneuver-12)
conj:and(run-10, maneuver-12)
nmod:poss(ships-14, their-13)
dobj(run-10, ships-14)

amod(simulators-2, Supertanker-1)
nsubj(provide-6, simulators-2)
case(facilities-5, at-3)
det(facilities-5, some-4)
nmod:at(simulators-2, facilities-5)
root(ROOT-0, provide-6)
amod(training-8, top-7)
dobj(provide-6, training-8)

advmod(installed-10, Finally-2)
compound(stations-7, ground-5)
compound(stations-7, control-6)
nsubjpass(installed-10, stations-7)
aux(installed-10, should-8)
auxpass(installed-10, be-9)
root(ROOT-0, installed-10)
case(shore-13, near-11)
det(shore-13, the-12)
nmod:near(installed-10, shore-13)

compound(stations-3, Ground-1)
compound(stations-3, control-2)
nsubj(act-5, stations-3)
aux(act-5, would-4)
root(ROOT-0, act-5)
case(towers-9, like-6)
compound(towers-9, airplane-7)
compound(towers-9, control-8)
nmod:like(act-5, towers-9)

nsubj(guide-3, They-1)
aux(guide-3, would-2)
root(ROOT-0, guide-3)
dobj(guide-3, supertankers-4)
advmod(guide-3, safely-5)
case(oceans-8, on-6)
det(oceans-8, the-7)
nmod:on(guide-3, oceans-8)
case(coasts-10, along-9)
nmod:along(oceans-8, coasts-10)

nsubj(ensures-2, This-1)
nsubj(ensures-2', This-1)
root(ROOT-0, ensures-2)
conj:and(ensures-2, ensures-2')
dobj(ensures-2, safety-3)
case(lanes-6, in-4)
compound(lanes-6, shipping-5)
nmod:in(ensures-2, lanes-6)
cc(ensures-2, and-7)
case(coasts-10, along-8)
amod(coasts-10, dangerous-9)
nmod:along(ensures-2', coasts-10)

nummod(concepts-4, Two-1)
amod(concepts-4, important-2)
compound(concepts-4, math-3)
nsubj(combinations-6, concepts-4)
cop(combinations-6, are-5)
root(ROOT-0, combinations-6)
cc(combinations-6, and-7)
conj:and(combinations-6, permutations-8)

nsubj(similar-5, Combinations-1)
cc(Combinations-1, and-2)
conj:and(Combinations-1, permutations-3)
nsubj(similar-5, permutations-3)
cop(similar-5, are-4)
root(ROOT-0, similar-5)
case(ways-8, in-6)
amod(ways-8, several-7)
nmod:in(similar-5, ways-8)

nsubj(refer-2, Both-1)
root(ROOT-0, refer-2)
case(sets-4, to-3)
nmod:to(refer-2, sets-4)
case(objects-6, of-5)
nmod:of(sets-4, objects-6)
mark(pick-9, that-7)
nsubj(pick-9, you-8)
nsubj(arrange-11, you-8)
ccomp(refer-2, pick-9)
cc(pick-9, and-10)
ccomp(refer-2, arrange-11)
conj:and(pick-9, arrange-11)
advcl(arrange-11, in-12)
mwe(in-12, order-13)

det(set-2, A-1)
nsubj(numbers-6, set-2)
aux(numbers-6, could-3)
cop(numbers-6, be-4)
det(numbers-6, the-5)
root(ROOT-0, numbers-6)
nmod:through(numbers-6, 1-7)
case(1-7, through-8)
dep(1-7, 9-10)
cc(9-10, or-13)
amod(toppings-16, available-14)
compound(toppings-16, pizza-15)
dep(1-7, toppings-16)
conj:or(9-10, toppings-16)

case(combinations-2, For-1)
nmod:for(selected-10, combinations-2)
cc(combinations-2, and-3)
conj:and(combinations-2, permutations-5)
nmod:for(selected-10, permutations-5)
nsubjpass(selected-10, items-8)
auxpass(selected-10, are-9)
root(ROOT-0, selected-10)
case(set-13, from-11)
det(set-13, a-12)
nmod:from(selected-10, set-13)

case(example-3, For-1)
nmod:for(select-8, example-3)
nsubj(select-8, we-6)
aux(select-8, can-7)
root(ROOT-0, select-8)
dobj(select-8, 1-3-9)
case(1-9-13, from-10)
det(1-9-13, the-11)
amod(1-9-13, set-12)
nmod:from(select-8, 1-9-13)
case(count-15, to-14)
nmod:to(1-9-13, count-15)
cc(count-15, and-16)
nmod:to(1-9-13, order-17)
conj:and(count-15, order-17)

advmod(calculated-9, However-2)
nsubjpass(calculated-9, combinations-5)
cc(combinations-5, and-6)
conj:and(combinations-5, permutations-7)
nsubjpass(calculated-9, permutations-7)
auxpass(calculated-9, are-8)
root(ROOT-0, calculated-9)
advmod(calculated-9, differently-10)

advmod(compute-3, When-1)
nsubj(compute-3, we-2)
advcl(matter-14, compute-3)
det(combination-6, a-4)
dobj(compute-3, combination-6)
det(order-11, the-9)
compound(order-11, item-10)
nsubj(matter-14, order-11)
aux(matter-14, does-12)
neg(matter-14, not-13)
root(ROOT-0, matter-14)

det(combination-2, A-1)
nsubj(same-15, combination-2)
case(1-5, of-3)
nmod:of(combination-2, 1-5)
dep(1-5, 2-9)
nsubj(same-15, 3-12)
cop(same-15, is-13)
det(same-15, the-14)
root(ROOT-0, same-15)
case(combination-18, as-16)
det(combination-18, the-17)
nmod:as(same-15, combination-18)
case(3-21, of-19)
nmod:of(combination-18, 3-21)
dep(3-21, 2-25)
dep(same-15, 1-28)

det(example-2, Another-1)
nsubj(picking-7, example-2)
case(combination-5, of-3)
det(combination-5, a-4)
nmod:of(example-2, combination-5)
aux(picking-7, is-6)
root(ROOT-0, picking-7)
compound(toppings-9, pizza-8)
dobj(picking-7, toppings-9)

root(ROOT-0, Suppose-1)
nsubj(pick-3, you-2)
ccomp(Suppose-1, pick-3)
nummod(toppings-5, three-4)
dobj(pick-3, toppings-5)
dep(pick-3, cheese-8)
dep(cheese-8, pepperoni-12)
cc(pepperoni-12, and-15)
dep(cheese-8, sausage-16)
conj:and(pepperoni-12, sausage-16)

nsubj(say-4, You-1)
aux(say-4, can-2)
advmod(say-4, also-3)
root(ROOT-0, say-4)
mark(pick-7, that-5)
nsubj(pick-7, you-6)
ccomp(say-4, pick-7)
dobj(pick-7, sausage-9)
dobj(pick-7, pepperoni-13)
conj:and(sausage-9, pepperoni-13)
cc(sausage-9, and-16)
dobj(pick-7, cheese-17)
conj:and(sausage-9, cheese-17)

advmod(have-3, Here-1)
nsubj(have-3, you-2)
root(ROOT-0, have-3)
det(combination-5, a-4)
dobj(have-3, combination-5)
case(things-8, of-6)
nummod(things-8, three-7)
nmod:of(combination-5, things-8)
case(orders-12, in-9)
nummod(orders-12, two-10)
amod(orders-12, different-11)
nmod:in(things-8, orders-12)

cc(same-8, But-1)
det(pizzas-3, the-2)
nsubj(same-8, pizzas-3)
nsubj(get-5, you-4)
acl:relcl(pizzas-3, get-5)
cop(same-8, are-6)
det(same-8, the-7)
root(ROOT-0, same-8)
mark(does-12, because-9)
det(order-11, the-10)
nsubj(does-12, order-11)
advcl(same-8, does-12)
dobj(does-12, matter-13)

advmod(does-6, However-2)
nsubj(does-6, order-5)
root(ROOT-0, does-6)
dobj(does-6, matter-7)
advmod(compute-10, when-8)
nsubj(compute-10, we-9)
acl:relcl(matter-7, compute-10)
det(permutation-12, a-11)
dobj(compute-10, permutation-12)

root(ROOT-0, 1,2-2)
ccomp(permutations-17, ,3-5)
cc(,3-5, and-7)
conj:and(,3-5, 3,2-9)
ccomp(permutations-17, 3,2-9)
nsubj(permutations-17, 1-14)
cop(permutations-17, are-15)
amod(permutations-17, different-16)
acl:relcl(1,2-2, permutations-17)
case(numbers-21, of-18)
det(numbers-21, these-19)
nummod(numbers-21, three-20)
nmod:of(permutations-17, numbers-21)

case(permutations-2, In-1)
nmod:in(have-7, permutations-2)
amod(orders-4, different-3)
nsubj(have-7, orders-4)
case(items-6, of-5)
nmod:of(orders-4, items-6)
root(ROOT-0, have-7)
amod(meanings-9, different-8)
dobj(have-7, meanings-9)

root(ROOT-0, Imagine-1)
nsubj(pick-4, you-2)
aux(pick-4, can-3)
ccomp(Imagine-1, pick-4)
advmod(one-6, only-5)
dobj(pick-4, one-6)
case(lunch-8, for-7)
acl(one-6, lunch-8)
dep(lunch-8, pizza-11)
dobj(pick-4, pasta-15)
cc(pasta-15, or-18)
dobj(pick-4, rice-19)
conj:or(pasta-15, rice-19)

nsubj(say-2, You-1)
root(ROOT-0, say-2)
nsubj(favorite-6, pizza-3)
cop(favorite-6, is-4)
nmod:poss(favorite-6, your-5)
ccomp(say-2, favorite-6)
cc(favorite-6, and-7)
ccomp(say-2, rice-8)
conj:and(favorite-6, rice-8)
cop(favorite-12, is-9)
nmod:poss(favorite-12, your-10)
amod(favorite-12, least-11)
acl:relcl(favorite-6, favorite-12)

dep(1-8, So-1)
nmod:poss(order-3, your-2)
nsubj(1-8, order-3)
case(preference-5, of-4)
nmod:of(order-3, preference-5)
cop(1-8, is-6)
root(ROOT-0, 1-8)
case(pizza-11, -RRB--9)
nmod:-rrb-(1-8, pizza-11)
dep(pasta-17, 2-14)
amod(pasta-17, ``-16)
dep(pizza-11, pasta-17)
cc(1-8, and-20)
dep(rice-23, 3-21)
amod(rice-23, -RRB--22)
conj:and(1-8, rice-23)

mark(runs-3, If-1)
nsubj(runs-3, pizza-2)
advcl(give-11, runs-3)
xcomp(runs-3, out-5)
det(waiter-9, the-8)
nsubj(give-11, waiter-9)
aux(give-11, will-10)
root(ROOT-0, give-11)
iobj(give-11, you-12)
dobj(give-11, pasta-13)
cc(pasta-13, and-14)
neg(rice-16, not-15)
dobj(give-11, rice-16)
conj:and(pasta-13, rice-16)

cc(have-5, But-1)
nmod:poss(friend-3, your-2)
nsubj(have-5, friend-3)
aux(have-5, may-4)
root(ROOT-0, have-5)
det(order-8, a-6)
amod(order-8, different-7)
dobj(have-5, order-8)
case(preference-10, of-9)
nmod:of(order-8, preference-10)

nmod:poss(order-3, Your-1)
compound(order-3, friend-2)
nsubj(pizza-22, order-3)
aux(1-7, could-4)
cop(1-7, be-5)
dep(order-3, 1-7)
dep(order-3, rice-10)
dep(pasta-16, 2-13)
dep(rice-10, pasta-16)
case(3-20, and-19)
nmod:and(pasta-16, 3-20)
root(ROOT-0, pizza-22)

dep(mean-8, So-1)
nummod(orders-3, two-2)
nsubj(mean-8, orders-3)
case(items-7, of-4)
det(items-7, the-5)
amod(items-7, same-6)
nmod:of(orders-3, items-7)
root(ROOT-0, mean-8)
nsubj(different-11, something-9)
advmod(different-11, quite-10)
xcomp(mean-8, different-11)

nsubj(allows-2, Permutation-1)
root(ROOT-0, allows-2)
dobj(allows-2, us-3)
nsubj:xsubj(count-5, us-3)
mark(count-5, to-4)
xcomp(allows-2, count-5)
det:predet(orders-9, all-6)
det(orders-9, the-7)
amod(orders-9, possible-8)
dobj(count-5, orders-9)
case(items-11, of-10)
nmod:of(orders-9, items-11)

case(numbers-3, Given-1)
nummod(numbers-3, three-2)
nmod:given(derive-10, numbers-3)
dep(numbers-3, 1,2,3-5)
nsubj(derive-10, we-8)
aux(derive-10, can-9)
root(ROOT-0, derive-10)
nummod(permutations-12, 6-11)
dobj(derive-10, permutations-12)

nsubj(include-2, These-1)
root(ROOT-0, include-2)
dobj(include-2, 1,2,3-4)
dep(1,2,3-4, 1,3,2-8)
dep(1,2,3-4, 2,1,3-12)
case(2,3,1-16, /-14)
nmod:/(include-2, 2,3,1-16)
dep(2,3,1-16, 3,1,2-20)
dep(2,3,1-16, 3,2,1-24)

det(sequences-2, These-1)
nsubj(permutations-8, sequences-2)
case(orders-5, in-3)
amod(orders-5, different-4)
nmod:in(sequences-2, orders-5)
cop(permutations-8, are-6)
amod(permutations-8, different-7)
root(ROOT-0, permutations-8)

compound(System-3, Global-1)
compound(System-3, Positioning-2)
nsubj(system-9, System-3)
appos(System-3, GPS-5)
cop(system-9, is-7)
det(system-9, a-8)
root(ROOT-0, system-9)
nsubj(helps-11, system-9)
ref(system-9, that-10)
acl:relcl(system-9, helps-11)
nsubj(navigate-13, us-12)
ccomp(helps-11, navigate-13)

nsubj(system-4, GPS-1)
cop(system-4, is-2)
det(system-4, a-3)
root(ROOT-0, system-4)
case(satellites-9, of-5)
nummod(satellites-9, 24-6)
cc(24-6, or-7)
conj:or(24-6, more-8)
nummod(satellites-9, more-8)
nmod:of(system-4, satellites-9)
case(space-11, in-10)
nmod:in(satellites-9, space-11)

det(satellites-2, These-1)
nsubj(orbit-3, satellites-2)
root(ROOT-0, orbit-3)
case(miles-9, at-4)
case(miles-9, about-5)
nummod(miles-9, 12,000-7)
nmod:about(orbit-3, miles-9)
case(Earth-12, above-10)
det(Earth-12, the-11)
nmod:above(miles-9, Earth-12)

amod(satellites-2, Different-1)
nsubj(orbit-3, satellites-2)
root(ROOT-0, orbit-3)
det(Earth-5, the-4)
dobj(orbit-3, Earth-5)
case(locations-8, in-6)
amod(locations-8, different-7)
nmod:in(Earth-5, locations-8)

nsubj(circle-2, They-1)
root(ROOT-0, circle-2)
det(Earth-4, the-3)
dobj(circle-2, Earth-4)
case(1-6, along-5)
nmod:along(Earth-4, 1-6)
case(orbits-9, of-7)
nummod(orbits-9, 6-8)
nmod:of(Earth-4, orbits-9)
advmod(circle-2, continuously-10)

nsubj(send-2, They-1)
root(ROOT-0, send-2)
dobj(send-2, information-3)
case(receiver-7, to-4)
det(receiver-7, a-5)
compound(receiver-7, GPS-6)
nmod:to(send-2, receiver-7)
case(Earth-9, on-8)
nmod:on(receiver-7, Earth-9)

det(information-2, The-1)
nsubjpass(transmitted-4, information-2)
auxpass(transmitted-4, is-3)
root(ROOT-0, transmitted-4)
case(space-6, across-5)
nmod:across(transmitted-4, space-6)
case(signals-9, via-7)
compound(signals-9, radio-8)
nmod:via(space-6, signals-9)

compound(signals-2, Radio-1)
nsubj(travel-3, signals-2)
root(ROOT-0, travel-3)
case(space-5, through-4)
nmod:through(travel-3, space-5)
case(waves-8, like-6)
amod(waves-8, sound-7)
nmod:like(space-5, waves-8)
case(canyon-11, through-9)
det(canyon-11, a-10)
nmod:through(travel-3, canyon-11)

root(ROOT-0, Imagine-1)
dobj(Imagine-1, you-2)
cc(Imagine-1, and-3)
nmod:poss(friend-5, your-4)
nsubj(sides-9, friend-5)
cop(sides-9, are-6)
case(sides-9, at-7)
amod(sides-9, different-8)
conj:and(Imagine-1, sides-9)
case(canyon-12, of-10)
det(canyon-12, a-11)
nmod:of(sides-9, canyon-12)

nsubj(shout-2, You-1)
root(ROOT-0, shout-2)
case(friend-5, to-3)
nmod:poss(friend-5, your-4)
nmod:to(shout-2, friend-5)
cc(shout-2, and-6)
nsubj(hears-8, she-7)
conj:and(shout-2, hears-8)
dobj(hears-8, you-9)
case(delay-13, after-10)
det(delay-13, a-11)
amod(delay-13, short-12)
nmod:after(hears-8, delay-13)

det(delay-2, This-1)
nsubj(time-5, delay-2)
cop(time-5, is-3)
det(time-5, the-4)
root(ROOT-0, time-5)
mark(need-9, that-6)
amod(waves-8, sound-7)
nsubj(need-9, waves-8)
nsubj:xsubj(reach-11, waves-8)
ccomp(time-5, need-9)
mark(reach-11, to-10)
xcomp(need-9, reach-11)
det(side-14, the-12)
amod(side-14, other-13)
dobj(reach-11, side-14)

advmod(sends-9, Similarly-2)
det(satellite-6, the-5)
nsubj(sends-9, satellite-6)
case(space-8, in-7)
nmod:in(satellite-6, space-8)
root(ROOT-0, sends-9)
det(signal-12, a-10)
compound(signal-12, radio-11)
dobj(sends-9, signal-12)
case(time-15, at-13)
nummod(time-15, one-14)
nmod:at(sends-9, time-15)

case(delay-3, After-1)
det(delay-3, a-2)
nmod:after(arrives-7, delay-3)
det(signal-6, the-4)
compound(signal-6, radio-5)
nsubj(arrives-7, signal-6)
root(ROOT-0, arrives-7)
case(receiver-11, at-8)
det(receiver-11, the-9)
compound(receiver-11, GPS-10)
nmod:at(arrives-7, receiver-11)
case(Earth-13, on-12)
nmod:on(arrives-7, Earth-13)

det(receiver-2, The-1)
nsubj(records-3, receiver-2)
root(ROOT-0, records-3)
det(time-6, the-4)
amod(time-6, precise-5)
dobj(records-3, time-6)
advmod(arrives-11, when-7)
det(signal-10, the-8)
compound(signal-10, radio-9)
nsubj(arrives-11, signal-10)
acl:relcl(time-6, arrives-11)

nsubj(calculates-3, It-1)
advmod(calculates-3, then-2)
root(ROOT-0, calculates-3)
det(difference-5, the-4)
dobj(calculates-3, difference-5)
case(times-9, between-6)
det(times-9, these-7)
nummod(times-9, two-8)
nmod:between(difference-5, times-9)

det(difference-3, This-1)
compound(difference-3, time-2)
nsubj(time-7, difference-3)
cop(time-7, is-4)
det(time-7, the-5)
compound(time-7, travel-6)
root(ROOT-0, time-7)
case(signal-11, of-8)
det(signal-11, the-9)
compound(signal-11, radio-10)
nmod:of(time-7, signal-11)

det(GPS-2, The-1)
nsubj(uses-3, GPS-2)
root(ROOT-0, uses-3)
det(time-6, this-4)
compound(time-6, travel-5)
dobj(uses-3, time-6)
nsubj:xsubj(figure-8, time-6)
mark(figure-8, to-7)
xcomp(uses-3, figure-8)
compound:prt(figure-8, out-9)
advmod(far-11, how-10)
advmod(is-14, far-11)
det(satellite-13, the-12)
nsubj(is-14, satellite-13)
ccomp(figure-8, is-14)

nsubj(uses-2, It-1)
root(ROOT-0, uses-2)
det(formula-4, the-3)
dobj(uses-2, formula-4)
dep(uses-2, distance-6)
dep(time-8, =-7)
ccomp(distance-6, time-8)
appos(rate-13, T-10)
amod(rate-13, x-12)
dep(distance-6, rate-13)
case(transmission-15, of-14)
nmod:of(rate-13, transmission-15)
appos(rate-13, C-17)

nsubj(time-5, T-1)
cop(time-5, is-2)
det(time-5, the-3)
compound(time-5, travel-4)
root(ROOT-0, time-5)
case(signal-9, of-6)
det(signal-9, the-7)
compound(signal-9, radio-8)
nmod:of(time-5, signal-9)

nsubj(speed-4, C-1)
cop(speed-4, is-2)
det(speed-4, the-3)
root(ROOT-0, speed-4)
case(miles-15, of-5)
dep(miles-15, light-7)
dep(light-7, more-10)
case(186,000-13, than-11)
nmod:than(more-10, 186,000-13)
nmod:of(speed-4, miles-15)
case(second-17, per-16)
nmod:per(speed-4, second-17)

compound(C-3, T-1)
compound(C-3, x-2)
nsubj(calculates-4, C-3)
root(ROOT-0, calculates-4)
det(distance-6, the-5)
dobj(calculates-4, distance-6)
case(receiver-9, between-7)
det(receiver-9, the-8)
nmod:between(distance-6, receiver-9)
cc(receiver-9, and-10)
det(satellite-12, each-11)
nmod:between(distance-6, satellite-12)
conj:and(receiver-9, satellite-12)

amod(satellites-2, Different-1)
nsubj(have-3, satellites-2)
root(ROOT-0, have-3)
amod(distances-5, different-4)
dobj(have-3, distances-5)
case(receiver-8, from-6)
det(receiver-8, the-7)
nmod:from(have-3, receiver-8)

det(information-2, This-1)
nsubj(helps-3, information-2)
root(ROOT-0, helps-3)
det(receiver-5, the-4)
nsubj(determine-6, receiver-5)
ccomp(helps-3, determine-6)
nmod:poss(location-8, its-7)
dobj(determine-6, location-8)
case(Earth-10, on-9)
nmod:on(determine-6, Earth-10)

det(location-3, The-1)
amod(location-3, precise-2)
nsubjpass(calculated-5, location-3)
auxpass(calculated-5, is-4)
root(ROOT-0, calculated-5)
case(geometry-8, based-6)
mwe(based-6, on-7)
advcl(calculated-5, geometry-8)
case(distances-10, of-9)
nmod:of(geometry-8, distances-10)

det(device-3, A-1)
compound(device-3, GPS-2)
nsubj(receiver-13, device-3)
mark(carry-6, that-4)
nsubj(carry-6, you-5)
dep(device-3, carry-6)
case(car-9, in-7)
nmod:poss(car-9, your-8)
nmod:in(carry-6, car-9)
cop(receiver-13, is-10)
det(receiver-13, a-11)
amod(receiver-13, small-12)
root(ROOT-0, receiver-13)

compound(signals-2, Radio-1)
nsubj(updated-7, signals-2)
case(satellites-5, from-3)
det(satellites-5, the-4)
nmod:from(signals-2, satellites-5)
aux(updated-7, are-6)
root(ROOT-0, updated-7)
case(moves-11, as-8)
det(moves-11, the-9)
compound(moves-11, device-10)
nmod:as(updated-7, moves-11)

case(least-2, At-1)
nmod:npmod(4-3, least-2)
nummod(satellites-4, 4-3)
nsubjpass(involved-6, satellites-4)
nsubj:xsubj(pinpoint-8, satellites-4)
auxpass(involved-6, are-5)
root(ROOT-0, involved-6)
mark(pinpoint-8, to-7)
xcomp(involved-6, pinpoint-8)
det(location-11, the-9)
compound(location-11, device-10)
dobj(pinpoint-8, location-11)

compound(devices-2, GPS-1)
nsubj(provide-3, devices-2)
root(ROOT-0, provide-3)
dobj(provide-3, maps-4)
cc(maps-4, and-5)
dobj(provide-3, directions-6)
conj:and(maps-4, directions-6)
mark(travel-10, that-7)
compound(people-9, help-8)
nsubj(travel-10, people-9)
ccomp(provide-3, travel-10)

nsubj(design-2, Engineers-1)
root(ROOT-0, design-2)
amod(circuits-4, electrical-3)
dobj(design-2, circuits-4)
case(homes-7, to-5)
compound(homes-7, power-6)
nmod:to(design-2, homes-7)
cc(homes-7, and-8)
nmod:to(design-2, buildings-9)
conj:and(homes-7, buildings-9)

amod(circuits-2, Electrical-1)
nsubjpass(closed-4, circuits-2)
auxpass(closed-4, are-3)
root(ROOT-0, closed-4)
dobj(closed-4, paths-5)
mark(flows-8, that-6)
nsubj(flows-8, electricity-7)
ccomp(closed-4, flows-8)
compound:prt(flows-8, through-9)

nsubj(means-2, This-1)
root(ROOT-0, means-2)
mark(connected-9, that-3)
det(path-6, the-4)
amod(path-6, entire-5)
nsubjpass(connected-9, path-6)
aux(connected-9, must-7)
auxpass(connected-9, be-8)
ccomp(means-2, connected-9)
case(loop-12, like-10)
det(loop-12, a-11)
nmod:like(connected-9, loop-12)

root(ROOT-0, Imagine-1)
det(circuit-4, a-2)
amod(circuit-4, simple-3)
dobj(Imagine-1, circuit-4)
acl(circuit-4, made-5)
case(battery-8, with-6)
det(battery-8, a-7)
nmod:with(made-5, battery-8)
cc(battery-8, and-9)
det(piece-11, a-10)
nmod:with(made-5, piece-11)
conj:and(battery-8, piece-11)
case(wire-13, of-12)
nmod:of(piece-11, wire-13)

advmod(connect-2, Now-1)
root(ROOT-0, connect-2)
det(end-4, each-3)
dobj(connect-2, end-4)
case(wire-7, of-5)
det(wire-7, the-6)
nmod:of(end-4, wire-7)
case(ends-10, to-8)
amod(ends-10, different-9)
nmod:to(connect-2, ends-10)
case(battery-13, of-11)
det(battery-13, the-12)
nmod:of(ends-10, battery-13)

nmod:poss(piece-2, Your-1)
nsubj(make-8, piece-2)
case(wire-4, of-3)
nmod:of(piece-2, wire-4)
cc(wire-4, and-5)
nmod:of(piece-2, battery-6)
conj:and(wire-4, battery-6)
advmod(make-8, now-7)
root(ROOT-0, make-8)
det(circle-10, a-9)
dobj(make-8, circle-10)
cc(circle-10, or-11)
amod(path-13, circular-12)
dobj(make-8, path-13)
conj:or(circle-10, path-13)

nummod(end-2, One-1)
nsubj(positive-7, end-2)
nsubj(negative-12, end-2)
case(battery-5, of-3)
det(battery-5, the-4)
nmod:of(end-2, battery-5)
cop(positive-7, is-6)
root(ROOT-0, positive-7)
cc(positive-7, and-8)
det(end-11, the-9)
amod(end-11, other-10)
dep(negative-12, end-11)
conj:and(positive-7, negative-12)

nsubj(flow-3, Electrons-1)
aux(flow-3, will-2)
root(ROOT-0, flow-3)
case(circuit-6, across-4)
det(circuit-6, this-5)
nmod:across(flow-3, circuit-6)
case(wire-9, through-7)
det(wire-9, the-8)
nmod:through(flow-3, wire-9)

nsubj(created-4, You-1)
aux(created-4, have-2)
advmod(created-4, just-3)
root(ROOT-0, created-4)
det(circuit-8, a-5)
amod(circuit-8, simple-6)
amod(circuit-8, electrical-7)
dobj(created-4, circuit-8)

csubj(stop-8, Removing-1)
det(wire-3, the-2)
dobj(Removing-1, wire-3)
case(battery-6, from-4)
det(battery-6, the-5)
nmod:from(Removing-1, battery-6)
aux(stop-8, will-7)
root(ROOT-0, stop-8)
det(flow-10, the-9)
dobj(stop-8, flow-10)
case(electrons-12, of-11)
nmod:of(flow-10, electrons-12)

advmod(imagine-2, Now-1)
root(ROOT-0, imagine-2)
mark(want-5, that-3)
nsubj(want-5, you-4)
nsubj:xsubj(connect-7, you-4)
ccomp(imagine-2, want-5)
mark(connect-7, to-6)
xcomp(want-5, connect-7)
det(battery-9, the-8)
dobj(connect-7, battery-9)
case(lightbulb-12, to-10)
det(lightbulb-12, a-11)
nmod:to(connect-7, lightbulb-12)

advmod(cut-5, First-1)
det(wire-3, the-2)
nsubjpass(cut-5, wire-3)
nsubj(breaks-10, wire-3)
auxpass(cut-5, is-4)
root(ROOT-0, cut-5)
case(middle-8, in-6)
det(middle-8, the-7)
nmod:in(cut-5, middle-8)
cc(cut-5, and-9)
conj:and(cut-5, breaks-10)
det(circuit-12, the-11)
dobj(breaks-10, circuit-12)

advmod(inserted-5, Then-1)
det(lightbulb-3, a-2)
nsubjpass(inserted-5, lightbulb-3)
nsubj:xsubj(reconnect-7, lightbulb-3)
auxpass(inserted-5, is-4)
root(ROOT-0, inserted-5)
mark(reconnect-7, to-6)
xcomp(inserted-5, reconnect-7)
det(circuit-9, the-8)
dobj(reconnect-7, circuit-9)

det(circuit-3, The-1)
amod(circuit-3, electrical-2)
nsubj(complete-5, circuit-3)
cop(complete-5, is-4)
root(ROOT-0, complete-5)
advmod(complete-5, again-6)
cc(complete-5, and-7)
nsubj(flowing-10, electrons-8)
aux(flowing-10, are-9)
conj:and(complete-5, flowing-10)

nsubj(flows-3, Electricity-1)
advmod(flows-3, now-2)
root(ROOT-0, flows-3)
case(lightbulb-7, through-4)
det(lightbulb-7, the-5)
nmod:through(flows-3, lightbulb-7)
acl(lightbulb-7, lighting-10)
dobj(lighting-10, it-11)
compound:prt(lighting-10, up-12)

mark(broken-7, If-1)
det(circuit-3, the-2)
nsubj(broken-7, circuit-3)
cop(broken-7, is-4)
advmod(broken-7, now-5)
advcl(go-13, broken-7)
det(lightbulb-11, the-10)
nsubj(go-13, lightbulb-11)
aux(go-13, will-12)
root(ROOT-0, go-13)
compound:prt(go-13, out-14)

nsubj(add-4, You-1)
aux(add-4, can-2)
advmod(add-4, also-3)
root(ROOT-0, add-4)
det(switch-6, a-5)
dobj(add-4, switch-6)
case(circuit-9, in-7)
det(circuit-9, the-8)
nmod:in(add-4, circuit-9)
mark(break-11, to-10)
acl(circuit-9, break-11)
dobj(break-11, it-12)
cc(break-11, or-13)
acl(circuit-9, connect-14)
conj:or(break-11, connect-14)
dobj(connect-14, it-15)

nsubj(allows-2, This-1)
root(ROOT-0, allows-2)
dobj(allows-2, you-3)
nsubj:xsubj(turn-5, you-3)
nsubj:xsubj(turn-8, you-3)
mark(turn-5, to-4)
xcomp(allows-2, turn-5)
compound:prt(turn-5, on-6)
cc(turn-5, or-7)
xcomp(allows-2, turn-8)
conj:or(turn-5, turn-8)
compound:prt(turn-8, off-9)
det(lightbulb-11, the-10)
dobj(turn-8, lightbulb-11)

det(circuit-4, A-1)
amod(circuit-4, simple-2)
amod(circuit-4, electrical-3)
nsubj(contains-5, circuit-4)
root(ROOT-0, contains-5)
amod(parts-7, several-6)
dobj(contains-5, parts-7)

nsubj(include-2, These-1)
root(ROOT-0, include-2)
det(source-5, a-3)
dobj(include-2, source-5)
det(path-10, a-8)
dobj(include-2, path-10)
conj:and(source-5, path-10)
cc(source-5, and-13)
det(resistor-15, a-14)
dobj(include-2, resistor-15)
conj:and(source-5, resistor-15)

det(source-2, The-1)
nsubj(provides-3, source-2)
root(ROOT-0, provides-3)
det(energy-5, the-4)
dobj(provides-3, energy-5)
case(circuit-9, to-6)
det(circuit-9, an-7)
amod(circuit-9, electrical-8)
nmod:to(provides-3, circuit-9)

case(example-3, In-1)
nmod:poss(example-3, our-2)
nmod:in(battery-12, example-3)
amod(example-3, above-5)
det(source-9, the-8)
nsubj(battery-12, source-9)
cop(battery-12, is-10)
det(battery-12, the-11)
root(ROOT-0, battery-12)

nsubj(differ-3, Batteries-1)
aux(differ-3, can-2)
root(ROOT-0, differ-3)
case(voltage-6, in-4)
nmod:in(differ-3, voltage-6)
det(potential-11, the-9)
amod(potential-11, electric-10)
dep(voltage-6, potential-11)
cc(potential-11, or-12)
dep(voltage-6, force-13)
conj:or(potential-11, force-13)

det(path-2, The-1)
nsubj(loop-6, path-2)
cop(loop-6, is-3)
det(loop-6, the-4)
amod(loop-6, closed-5)
root(ROOT-0, loop-6)
nsubj(connect-10, loop-6)
case(wires-8, with-7)
nmod:with(loop-6, wires-8)
ref(loop-6, that-9)
acl:relcl(loop-6, connect-10)
case(source-13, to-11)
det(source-13, the-12)
nmod:to(connect-10, source-13)

nsubj(flow-2, Electrons-1)
root(ROOT-0, flow-2)
case(path-5, through-3)
det(path-5, the-4)
nmod:through(flow-2, path-5)
case(currents-8, as-6)
amod(currents-8, electric-7)
nmod:as(path-5, currents-8)

compound(currents-2, Electric-1)
nsubj(increase-3, currents-2)
root(ROOT-0, increase-3)
case(voltage-6, with-4)
amod(voltage-6, increased-5)
nmod:with(increase-3, voltage-6)

det(resistor-2, The-1)
nsubj(device-5, resistor-2)
cop(device-5, is-3)
det(device-5, any-4)
root(ROOT-0, device-5)
nsubj(reduces-7, device-5)
ref(device-5, that-6)
acl:relcl(device-5, reduces-7)
det(current-10, the-8)
amod(current-10, electric-9)
dobj(reduces-7, current-10)

nsubj(creates-2, It-1)
root(ROOT-0, creates-2)
dobj(creates-2, resistance-3)
cc(resistance-3, or-4)
dobj(creates-2, impedance-5)
conj:or(resistance-3, impedance-5)
case(circuit-9, in-6)
det(circuit-9, the-7)
amod(circuit-9, electrical-8)
nmod:in(resistance-3, circuit-9)

case(example-3, In-1)
nmod:poss(example-3, our-2)
nmod:in(lightbulb-12, example-3)
amod(example-3, above-5)
det(resistor-9, the-8)
nsubj(lightbulb-12, resistor-9)
cop(lightbulb-12, is-10)
det(lightbulb-12, the-11)
root(ROOT-0, lightbulb-12)

compound(currents-2, Electric-1)
nsubj(decrease-3, currents-2)
root(ROOT-0, decrease-3)
case(resistance-6, with-4)
amod(resistance-6, increased-5)
nmod:with(decrease-3, resistance-6)

